name: Deploy to Private Amazon ECR

on:
  push:
    branches:
      - main  # Runs when pushing to the main branch

jobs:
  deploy:
    name: Build and Push to Private ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Create .env files
        run: |
          echo "${{ secrets.INFRA_ENV }}" > MyRecipeBook.Infrastructure/Infrastructure.env
          echo "${{ secrets.API_ENV }}" > MyRecipeBook.API/API.env
          
      - name: Load Environment Variables Safely
        run: |
          while IFS='=' read -r key value; do
            [[ ! -z "$key" ]] && echo "$key=\"$value\"" >> $GITHUB_ENV
          done < MyRecipeBook.Infrastructure/Infrastructure.env
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get short commit hash
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV

      - name: Log in to Amazon ECR
        run: |
          aws configure set default.region ${{ env.AWS_REGION }}
          aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ECR_URL }}

      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ env.AWS_ECR_URL }}:latest -t ${{ env.AWS_ECR_URL }}:${{ env.SHORT_SHA }} .

      - name: Push Docker Image to Private ECR
        run: |
          docker push ${{ env.AWS_ECR_URL }}:latest
          docker push ${{ env.AWS_ECR_URL }}:${{ env.SHORT_SHA }}

      - name: Verify Pushed Images
        run: |
          echo "Pushed images to ECR:"
          echo " - ${{ env.AWS_ECR_URL }}:latest"
          echo " - ${{ env.AWS_ECR_URL }}:${{ env.SHORT_SHA }}"